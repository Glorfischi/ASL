---
- name: Install python docker module
  become: true
  package:
    name: python-docker
    state: present

- name: Create network
  docker_network:
    name: "{{ hydra_network }}"

- name: Create and Start postgres Container
  docker_container:
    name: hydra_db
    image: postgres
    networks:
      - name: "{{ hydra_network }}"
    state: started
    volumes:
      - "{{ postgres_data_dir }}:/var/lib/mysql"
    env:
      POSTGRES_DATABASE: "{{ postgres_database }}"
      POSTGRES_USER: "{{ postgres_user }}"
      POSTGRES_PASSWORD: "{{ postgres_user_password }}"

- name: migrate
  docker_container:
    name: hydra-exec-migrate
    image: "oryd/hydra:{{ hydra_version }}"
    command: "migrate sql --yes postgres://{{ postgres_user }}:{{ postgres_user_password }}@hydra_db:5432/{{ postgres_database }}?sslmode=disable"
    networks:
      - name:  "{{ hydra_network }}"
    env:
      SECRETS_SYSTEM: "{{ hydra_system_secret }}"
      HYDRA_ADMIN_URL: "https://hydra:4445"


- name: Create hydra container
  docker_container:
    name: hydra
    image: "oryd/hydra:{{ hydra_version }}"
    command: "serve all"
    restart_policy: always
    ports:
     - "9000:4444"
     - "9001:4445"
    networks:
      - name:  "{{ hydra_network }}"
    env:
      DSN: "postgres://{{ postgres_user }}:{{ postgres_user_password }}@hydra_db:5432/{{ postgres_database }}?sslmode=disable"
      SECRETS_SYSTEM: "{{ hydra_system_secret }}"
      URLS_SELF_ISSUER: "{{ hydra_self_issuer }}"
      URLS_CONSENT: "{{ hydra_idp_url }}/consent"
      URLS_LOGIN: "{{ hydra_idp_url }}/login"
      SERVE_TLS_KEY_PATH: "/cert.key"
      SERVE_TLS_CERT_PATH: "/cert.pem"
      LOG_LEVEL: "debug"
      SERVE_PUBLIC_CORS_ENABLED: "true"
      SERVE_PUBLIC_CORS_ALLOWED_METHODS: "POST,GET,PUT,DELETE"
      SERVE_ADMIN_CORS_ENABLED: "true"
      SERVE_ADMIN_CORS_ALLOWED_METHODS: "POST,GET,PUT,DELETE"

    volumes:
      - /home/vagrant/cert.key:/cert.key
      - /home/vagrant/cert.pem:/cert.pem


- name: Wait for hydra to start
  wait_for:
    port: 9000
    delay: 5

- name: Create Client - Vault
  docker_container:
    name: hydra-exec-vault
    image: "oryd/hydra:{{ hydra_version }}"
    command: "clients create --skip-tls-verify \
    --id vault --secret test12345678 \
    --grant-types authorization_code,refresh_token,client_credentials,implicit \
    --response-types token,code,id_token \
    --scope testp,openid,offline \
    --callbacks {{ hydra_vault_url }}/ui/vault/auth/oidc/oidc/callback"
    networks:
      - name:  "{{ hydra_network }}"
    env:
      SECRETS_SYSTEM: "{{ hydra_system_secret }}"
      HYDRA_ADMIN_URL: "https://hydra:4445"

- name: Create Client - Fadalax Frontend
  docker_container:
    name: hydra-exec-fadalax-frontend
    image: "oryd/hydra:{{ hydra_version }}"
    command: "clients create --skip-tls-verify \
    --id fadalax-frontend --secret {{ hydra_fadalax_frontend_secret }} \
    --grant-types authorization_code,refresh_token,client_credentials,implicit \
    --response-types token,code,id_token \
    --scope testp,openid,offline \
    --callbacks https://fadalax.tech/token"
    networks:
      - name:  "{{ hydra_network }}"
    env:
      SECRETS_SYSTEM: "{{ hydra_system_secret }}"
      HYDRA_ADMIN_URL: "https://hydra:4445" 
